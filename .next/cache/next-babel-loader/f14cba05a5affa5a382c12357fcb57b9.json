{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    setLoading(true);\n    setError();\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              })[\"catch\"](function (err) {\n                setError(err);\n              }));\n\n            case 2:\n              data = _context.sent;\n              setStats(data);\n              console.log(stats);\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats: stats,\n    loading: loading,\n    error: error\n  };\n}","map":{"version":3,"sources":["E:/Code/covid-stats/utils/useStats.js"],"names":["useEffect","useState","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","fetch","then","res","json","err","data","console","log"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVF,QAAQ,EADE;AAAA,MAC7BG,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAENJ,QAAQ,CAAC,KAAD,CAFF;AAAA,MAE7BK,OAF6B;AAAA,MAEpBC,UAFoB;;AAAA,mBAGVN,QAAQ,EAHE;AAAA,MAG7BO,KAH6B;AAAA,MAGtBC,QAHsB;;AAIpCT,EAAAA,SAAS,CAAC,YAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ;;AACR,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBC,KAAK,CAACR,GAAD,CAAL,CAChBS,IADgB,CACX,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eADQ,WAEV,UAAAC,GAAG,EAAI;AACZN,gBAAAA,QAAQ,CAACM,GAAD,CAAR;AACD,eAJgB,CADrB;;AAAA;AACQC,cAAAA,IADR;AAMEX,cAAAA,QAAQ,CAACW,IAAD,CAAR;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAG,cAAAA,UAAU,CAAC,KAAD,CAAV;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAUAG,IAAAA,SAAS;AACV,GAdQ,EAcN,CAACP,GAAD,CAdM,CAAT;AAgBA,SAAO;AAAEC,IAAAA,KAAK,EAALA,KAAF;AAASE,IAAAA,OAAO,EAAPA,OAAT;AAAkBE,IAAAA,KAAK,EAALA;AAAlB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useStats(url) {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError();\r\n    async function fetchData() {\r\n      const data = await fetch(url)\r\n        .then(res => res.json())\r\n        .catch(err => {\r\n          setError(err);\r\n        });\r\n      setStats(data);\r\n      console.log(stats);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { stats, loading, error };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}