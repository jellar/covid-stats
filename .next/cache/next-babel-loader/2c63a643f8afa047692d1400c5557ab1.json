{"ast":null,"code":"import { useEffect, useState } from \"react\";\nexport default function useStats(url) {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    setLoading(true);\n    setError();\n\n    async function fetchData() {\n      const data = await fetch(url).then(res => res.json).catch(err => {\n        setError(err);\n      });\n      useStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["E:/Code/covid-stats/utils/useStats.js"],"names":["useEffect","useState","useStats","url","stats","setStats","loading","setLoading","error","setError","fetchData","data","fetch","then","res","json","catch","err"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACpC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBJ,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACK,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,EAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,QAAQ;;AACR,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,IAAI,GAAG,MAAMC,KAAK,CAACT,GAAD,CAAL,CAChBU,IADgB,CACXC,GAAG,IAAIA,GAAG,CAACC,IADA,EAEhBC,KAFgB,CAEVC,GAAG,IAAI;AACZR,QAAAA,QAAQ,CAACQ,GAAD,CAAR;AACD,OAJgB,CAAnB;AAKAf,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACDG,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACP,GAAD,CAbM,CAAT;AAeA,SAAO;AAAEC,IAAAA,KAAF;AAASE,IAAAA,OAAT;AAAkBE,IAAAA;AAAlB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport default function useStats(url) {\r\n  const [stats, setStats] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError();\r\n    async function fetchData() {\r\n      const data = await fetch(url)\r\n        .then(res => res.json)\r\n        .catch(err => {\r\n          setError(err);\r\n        });\r\n      useStats(data);\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { stats, loading, error };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}